events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Log formatı
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=create:10m rate=2r/m;
    
    # File upload boyutu
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    upstream video_maker_backend {
        server video-maker:3000;
        keepalive 32;
    }
    
    server {
        listen 80;
        server_name localhost;
        
        # API istekleri
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            # Video oluşturma endpoint'i için özel limit
            location /api/video/create {
                limit_req zone=create burst=5 nodelay;
                proxy_pass http://video_maker_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                # Timeout ayarları
                proxy_connect_timeout 60s;
                proxy_send_timeout 600s;
                proxy_read_timeout 600s;
            }
            
            proxy_pass http://video_maker_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
        }
        
        # Health check
        location /health {
            proxy_pass http://video_maker_backend;
            access_log off;
        }
        
        # Video dosyaları
        location /output/ {
            alias /var/www/output/;
            
            # Cache ayarları
            expires 1d;
            add_header Cache-Control "public, immutable";
            
            # Range requests için
            add_header Accept-Ranges bytes;
            
            # Video streaming için
            location ~* \.(mp4|webm|avi|mov)$ {
                add_header Content-Type video/mp4;
                mp4;
                mp4_buffer_size 1m;
                mp4_max_buffer_size 5m;
            }
        }
        
        # Ana sayfa
        location / {
            proxy_pass http://video_maker_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # 404 sayfası
        error_page 404 /404.html;
        location = /404.html {
            return 404 '{"error":"Endpoint bulunamadı"}';
            add_header Content-Type application/json;
        }
        
        # 50x hataları
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            return 500 '{"error":"Sunucu hatası"}';
            add_header Content-Type application/json;
        }
    }
    
    # HTTPS server (SSL sertifikası varsa)
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=63072000" always;
    #     
    #     # Diğer güvenlik başlıkları
    #     add_header X-Frame-Options DENY;
    #     add_header X-Content-Type-Options nosniff;
    #     add_header X-XSS-Protection "1; mode=block";
    #     
    #     # API ve diğer location'lar yukarıdaki ile aynı
    # }
}